------------------------------------------------------------------------------
--                               N L C O L L
--  N a t u r a l   L a n g u a g e   C o m p o n e n t   C o l l e c t i o n
--
--          Copyright 2009-2011 M. Grella, M. Nicola, D. Christen
--
--  In collaboration with Politecnico di Torino and Università di Torino.
--
--  Supported by
--   (a) Fondazione CRT under a "VivoMeglio" grant (Speak2Home)
--   (b) Region Piedmont under a “Converging Technologies” programme (ATLAS)
--
--  The project aims at developing open-source linguistic technologies for the
--  Italian language to improve the welfare of people, especially impaired users.
--
--  This is free software; you can redistribute it and/or modify it under
--  terms of the GNU General Public License as published by the Free Software
--  Foundation; either version 2, or (at your option) any later version.
--  This software is distributed in the hope that it will be useful, but WITH
--  OUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
--  or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License
--  for more details. Free Software Foundation, 59 Temple Place - Suite
--  330, Boston, MA 02111-1307, USA.
--
--  As a special exception, if other files instantiate generics from this
--  unit, or you link this unit with other files to produce an executable,
--  this unit does not by itself cause the resulting executable to be
--  covered by the GNU General Public License. This exception does not
--  however invalidate any other reasons why the executable file might be
--  covered by the GNU Public License.
--
------------------------------------------------------------------------------

with "lib/arcoll/arcoll.gpr";
with "lib/mlcoll/mlcoll.gpr";
with "xmlada";

library project NLColl is

    for Languages use ("Ada");

    type Mode_Type is ("Unsafe_Release", "Release", "Soft_Debug", "Debug");
    Mode : Mode_Type := external ("Release", "Soft_Debug");

    for Source_Dirs use ("src/**");
    for Object_Dir use "obj";
    for Library_Name use "nlcoll";
    for Library_Kind use "static";
    for Library_Dir use "bin";

    package Compiler is
        case Mode is
            when "Unsafe_Release" =>
                for Default_Switches ("ada") use
                  ("-gnatp",
                   --"-gnatW8",
                   "-O2",
                   "-gnata",
                   "-gnatwa",
                   "-gnatn",
                   "-gnat2012",
                   "-ffast-math",
                   "-funroll-loops",
                   "-finline-functions",
                   "-ftree-vectorize",
                   "-fomit-frame-pointer",
                   "-mfpmath=sse");

            when "Release" =>
                for Default_Switches ("ada") use
                  (--"-gnatW8",
                   "-O2",
                   "-gnata",
                   "-gnatwa",
                   "-gnatn",
                   "-gnat2012",
                   "-ffast-math",
                   "-funroll-loops",
                   "-finline-functions",
                   "-ftree-vectorize",
                   "-fomit-frame-pointer",
                   "-mfpmath=sse");

            when "Soft_Debug" =>
                for Default_Switches ("ada") use
                  ("-pg",
                   --"-gnatW8",
                   "-g",
                   "-O2",
                   "-gnata",
                   "-gnatwa",
                   "-gnat2012",
                   "-ffast-math",
                   "-fno-unroll-loops",
                   "-fno-inline-functions",
                   "-ftree-vectorize",
                   "-fno-omit-frame-pointer");

            when "Debug" =>
                for Default_Switches ("ada") use
                  (--"-O2",
                   "-fstack-check",               -- Generate stack checking code (part of Ada)
                   "-gnata",                      -- Enable assertions            (part of Ada)
                   "-gnato13",                    -- Overflow checking            (part of Ada)
                   "-gnatf",                      -- Full, verbose error messages
                   "-gnatwa",                     -- All optional warnings
                   "-gnatVa",                     -- All validity checks
                   --"-gnaty3abcdefhiklmnoOprstux", -- Style checks
                   -- "-gnatwe",                     -- Treat warnings as errors
                   "-gnat2012",                   -- Use Ada 2012
                   "-Wall",                       -- All GCC warnings
                   "-g"                          -- GDB
                   --"-gnatW8" -- UTF-8 Encoding
                  );                    -- "-pg"

        end case;
    end Compiler;

    package Builder is
        case Mode is
            when "Release" | "Unsafe_Release"  =>
                for Default_Switches ("ada") use ("-m", "-s");
            when "Debug" | "Soft_Debug" =>
                for Default_Switches ("ada") use ("-m", "-s");
        end case;
    end Builder;

end NLColl;
